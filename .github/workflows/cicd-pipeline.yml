name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build-and-push:
    runs-on: self-hosted
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}  # Use PAT instead of password

    - name: Build Docker Image
      run: |
        docker build -t obidocker10/myapp-new .

    - name: Push Docker Image to Docker Hub
      run: |
        docker push obidocker10/myapp-new

  sonar-analysis:
    runs-on: self-hosted
    needs: build-and-push
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Run SonarQube Analysis
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@v1
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


  deploy-to-minikube:
    runs-on: self-hosted
    needs: sonar-analysis
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Kubernetes CLI
      run: |
        kubectl cluster-info

    - name: Deploy to Minikube
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl rollout status deployment/myapp

  clean-up:
    runs-on: self-hosted
    needs: deploy-to-minikube
    if: success()
    steps:
    - name: Clean Up Docker Resources
      run: |
        docker system prune -af
